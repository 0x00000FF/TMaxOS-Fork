<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DocBook V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<reference>
<title>Сторінки підручника SSSD</title>
<refentry>
    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="include/upstream.xml" />

    <refmeta>
        <refentrytitle>sssd-secrets</refentrytitle>
        <manvolnum>5</manvolnum>
        <refmiscinfo class="manual">Формати файлів та правила</refmiscinfo>
    </refmeta>

    <refnamediv id='name'>
        <refname>sssd-secrets</refname>
        <refpurpose>Відповідач реєстраційних даних SSSD</refpurpose>
    </refnamediv>

    <refsect1 id='description'>
        <title>ОПИС</title>
        <para>
            На цій сторінці довідника описано налаштування засобу надання відповідей
Secrets для <citerefentry> <refentrytitle>sssd</refentrytitle>
<manvolnum>8</manvolnum> </citerefentry>. Щоб дізнатися більше про синтаксис
налаштування, зверніться до розділу «ФОРМАТ ФАЙЛІВ» сторінки довідника
<citerefentry> <refentrytitle>sssd.conf</refentrytitle>
<manvolnum>5</manvolnum> </citerefentry>.
        </para>
        <para>
             У багатьох програмах системи або користувача існує потреба у збереженні
конфіденційних даних, зокрема паролів і ключів до служб, та зручній роботі з
цими даними. Простим способом вирішення цієї проблеми є вбудовування цих
<quote>реєстраційних даних</quote> до файлів налаштувань. Втім, це
призводить до потенційного розширення доступу до конфіденційних даних через
резервні копії, системи керування налаштуваннями, та загалом робить захист
даних важчим.
         </para>
         <para>
             Проект <ulink url="https://github.com/latchset/custodia">custodia</ulink>
було створено для урегулювання цієї проблеми у хмароподібних середовищах,
але нам ця ідея здалася вартою уваги навіть на рівні окремої ізольованої
системи. Як служба захисту, SSSD є ідеальним місцем для реалізації такої
можливості з доступом до відповідного програмного інтерфейсу через сокети
UNIX. Така реалізація уможливлює використання локальних викликів і належну
маршрутизацію до локального або віддаленого сховища ключів, зокрема сховища
IPA, для зберігання, депонування і відновлення даних.
         </para>
         <para>
             Записи реєстраційних даних є простими парами ключ-значення. Реєстраційні
дані кожного з користувачів співвідносяться із його простором назв на основі
ідентифікатора користувача. Це означає, що реєстраційні дані одного
користувача ніколи не потраплять до іншого. Реєстраційні дані зберігаються у
<quote>контейнерах</quote>, які можна вкладати один у одного.
         </para>
         <para>
             Оскільки відповідач реєстраційних даних може використовуватися ззовні для
зберігання загальних реєстраційних даних, як це описано у решті цієї
сторінки підручника, і всередині іншими компонентами SSSD для зберігання
власних реєстраційних даних, можна налаштувати деякі параметри, зокрема
квоти для окремих записів <quote>hive</quote> у підрозділі налаштувань із
назвою відповідного рою. Підтримувані у поточній версії рої: <variablelist>
                 <varlistentry>
                     <term>secrets</term>
                     <listitem><para>записи реєстраційних даних для загального використання</para></listitem>
                 </varlistentry>
                 <varlistentry>
                     <term>kcm</term>
                     <listitem>
                             <para>використовується службою <citerefentry>
<refentrytitle>sssd-kcm</refentrytitle> <manvolnum>8</manvolnum>
</citerefentry>.
                            </para>
                    </listitem>
                 </varlistentry>
             </variablelist>
         </para>
    </refsect1>

    <refsect1 id='usage'>
        <title>КОРИСТУВАННЯ ВІДПОВІДАЧЕМ РЕЄСТРАЦІЙНИХ ДАНИХ</title>
        <para>
            Сокет UNIX, на якому відповідач SSSD очікує на дані, розташовано у
<filename>/var/run/secrets.socket</filename>.
        </para>
        <para>
            Відповідач для реєстраційних даних активується за допомогою сокетів
<citerefentry> <refentrytitle>systemd</refentrytitle>
<manvolnum>1</manvolnum> </citerefentry>. На відміну від інших відповідачів
SSSD, його не можна запустити додаванням рядка <quote>secrets</quote> до
інструкції <quote>service</quote>. Модуль сокета systemd називається
<quote>sssd-secrets.socket</quote>, а відповідний файл служби має назву
<quote>sssd-secrets.service</quote>. Щоб службу можна було активувати за
допомогою сокета, слід увімкнути і задіяти сокет, а потім увімкнути службу:
<programlisting>
systemctl start sssd-secrets.socket
systemctl enable sssd-secrets.socket
systemctl enable sssd-secrets.service
            </programlisting> Будь ласка, зауважте, що
відповідні налаштування модулів вже могло бути виконано засобами вашого
дистрибутива.
        </para>
    </refsect1>

    <refsect1 id='options'>
        <title>ПАРАМЕТРИ НАЛАШТУВАННЯ</title>
        <para>
            Відповідачу реєстраційних даних можна передавати типові параметри
відповідача SSSD, зокрема <quote>debug_level</quote> та
<quote>fd_limit</quote>. Із повним списком параметрів можна ознайомитися на
сторінці підручника <citerefentry> <refentrytitle>sssd.conf</refentrytitle>
<manvolnum>5</manvolnum> </citerefentry>. Крім того, передбачено декілька
специфічних для реєстраційних даних параметрів.
        </para>
        <para>
            Відповідач реєстраційних даних налаштовується за допомогою загального
розділу <quote>[secrets]</quote> і необов'язкових розділів
<quote>[secrets/users/$uid]</quote> для окремих користувачів у
<filename>sssd.conf</filename>. Будь ласка, зауважте, що деякі параметра,
зокрема тип постачальника даних, можна вказати лише у підрозділах окремих
користувачів.
        </para>
        <variablelist>
            <varlistentry>
                <term>provider (рядок)</term>
                <listitem>
                <para>
                    Цей параметр визначає, де слід зберігати реєстраційні дані. Відповідач
реєстраційних даних може налаштувати підрозділи для окремих користувачів
(наприклад, <quote>[secrets/users/123]</quote> — див. нижню частину цієї
сторінки підручників, де наведено повний приклад використання Custodia для
окремого користувача), які визначатимуть, яке сховище відповідача
зберігатиме дані певного користувача. Підрозділи окремих користувачів мають
містити усі параметри відповідного засобу надання даних користувача. Будь
ласка, зауважте, що у поточній версії загальний постачальних даних з завжди
локальним, а проміжного постачальника можна вказати лише для окремого
користувача у відповідному розділі. Передбачено підтримку таких
відповідачів: <variablelist>
                        <varlistentry>
                            <term>local</term>
                            <listitem>
                                <para>
                                    Реєстраційні дані зберігаються у локальній базі даних, зашифровані, разом із
іншими даними, за допомогою основного ключа. Для локального засобу надання
даних у поточній версії не передбачено жодних додаткових параметрів.
                                </para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term>proxy</term>
                            <listitem>
                                <para>
                                    Відповідач реєстраційних даних переспрямовує запити до сервера Custodia. Для
засобу надання даних «proxy» передбачено декілька додаткових параметрів
(див. нижче).
                                </para>
                            </listitem>
                        </varlistentry>
                    </variablelist>
                </para>
                <para>
                    Типове значення: local
                </para>
                </listitem>
            </varlistentry>
        </variablelist>
        <para>
            Наведені нижче параметри стосуються лише записів реєстраційних даних
<quote>hive</quote> і тому їх слід встановлювати у підрозділах окремих
роїв. Встановлення значення параметра 0 означає «без обмежень».
        </para>
        <variablelist>
            <varlistentry>
                <term>containers_nest_level (ціле значення)</term>
                <listitem>
                <para>
                    Цей параметр визначає максимальну дозволену кількість вкладених контейнерів.
                </para>
                <para>
                    Типове значення: 4
                </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>max_secrets (ціле значення)</term>
                <listitem>
                <para>
                    Цей параметр визначає максимальну кількість записів реєстраційних даних, які
можна зберігати у рою.
                </para>
                <para>
                    Типове значення: 1024 (рій реєстраційних даних), 256 (рій kcm)
                </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>max_uid_secrets (ціле число)</term>
                <listitem>
                <para>
                    Цей параметр визначає максимальну кількість записів реєстраційних даних, які
можна зберігати окремо для різних UID у рою.
                </para>
                <para>
                    Типове значення: 256 (рій реєстраційних даних), 64 (рій kcm)
                </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>max_payload_size (ціле значення)</term>
                <listitem>
                <para>
                    Цей параметри визначає максимальний об'єм даних для реєстраційного запису у
кілобайтах.
                </para>
                <para>
                    Типове значення: 16 (рій реєстраційних даних), 65536 (64 МіБ) (рій kcm)
                </para>
                </listitem>
            </varlistentry>
        </variablelist>
        <para>
            Наприклад, щоб встановити різні квоти для роїв <quote>secrets</quote> та
<quote>kcm</quote>, скористайтеся такими рядками: <programlisting>
[secrets/secrets]
max_payload_size = 128

[secrets/kcm]
max_payload_size = 256
            </programlisting>
        </para>
        <para>
            Вказані нижче параметри стосуються лише конфігурацій, у яких
використовується засіб надання даних <quote>proxy</quote>.
        </para>
        <variablelist>
            <varlistentry>
                <term>proxy_url (рядок)</term>
                <listitem>
                <para>
                    Адреса, за якою очікуватиме на дані сервер Custodia. У поточній версії
передбачено підтримку протоколів http і https.
                </para>
                <para>
                    Формат адреси має відповідати формату, що визначається RFC 2732:
                </para>
                <para>
                    http[s]://&lt;вузол&gt;[:порт]
                </para>
                <para>
                    Приклад: http://localhost:8080
                </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>auth_type (рядок)</term>
                <listitem>
                <para>
                    Спосіб розпізнавання сервером Custodia. Передбачено підтримку таких способів
розпізнавання:
                </para>
                <variablelist>
                    <varlistentry>
                        <term>basic_auth</term>
                        <listitem>
                            <para>
                                Виконати розпізнавання на основі імені користувача і пароля, які визначено
параметрами <quote>username</quote> і <quote>password</quote>.
                            </para>
                        </listitem>
                    </varlistentry>
                    <varlistentry>
                        <term>header</term>
                        <listitem>
                            <para>
                                Виконати розпізнавання за допомогою значення заголовка HTTP, як його
визначено у параметрах налаштування <quote>auth_header_name</quote> і
<quote>auth_header_value</quote>.
                            </para>
                        </listitem>
                    </varlistentry>
                </variablelist>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>auth_header_name (рядок)</term>
                <listitem>
                <para>
                    Якщо встановлено, відповідач реєстраційних даних додаватиме заголовок із
цією назвою до запиту HTTP разом із значенням, яке визначається параметром
налаштування <quote>auth_header_value</quote>.
                </para>
                <para>
                    Приклад: MYSECRETNAME
                </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>auth_header_value (рядок)</term>
                <listitem>
                <para>
                    Значення, яке sssd-secrets має використовувати для
<quote>auth_header_name</quote>.
                </para>
                <para>
                    Приклад: mysecret
                </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>forward_headers (список рядків)</term>
                <listitem>
                <para>
                    Список заголовків HTTP, які слід переспрямувати до сервера Custodia разом із
запитом.
                </para>
                <para>
                    Типове значення: not set
                </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>verify_peer (булеве значення)</term>
                <listitem>
                <para>
                    Визначає, чи слід перевіряти сертифікат вузла і чи слід вважати його чинним,
якщо для засобу надання даних проксі використано протокол HTTPS.
                </para>
                <para>
                    Типове значення: true
                </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>verify_host (булеве значення)</term>
                <listitem>
                <para>
                    Визначає, чи має назва вузла збігатися із назвою вузла у його сертифікаті,
якщо для засобу надання даних проксі використано протокол HTTPS.
                </para>
                <para>
                    Типове значення: true
                </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>capath (рядок)</term>
                <listitem>
                <para>
                    Шлях до каталогу, у якому зберігаються сертифікати служб сертифікації. Якщо
для цього параметра не встановлено значення, використовуватиметься
загальносистемний типовий шлях.
                </para>
                <para>
                    Типове значення: not set
                </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>cacert (рядок)</term>
                <listitem>
                <para>
                    Шлях до файла, у якому міститься сертифікат служби сертифікації
сервера. Якщо для цього параметра не встановлено значення, програма шукатиме
сертифікат CA у <quote>capath</quote>.
                </para>
                <para>
                    Типове значення: not set
                </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>cert (рядок)</term>
                <listitem>
                <para>
                    Шлях до файла, що містить клієнтський сертифікат, якщо такий потрібен для
сервера. Цей файл може також містити закритий ключ. Закритий ключ можна
також зберігати у файлі, назву якого встановлено за допомогою параметра
<quote>key</quote>.
                </para>
                <para>
                    Типове значення: not set
                </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>key (рядок)</term>
                <listitem>
                <para>
                    Шлях до файла, у якому міститься закритий ключ клієнта.
                </para>
                <para>
                    Типове значення: not set
                </para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsect1>
    <refsect1 id='restapi'>
        <title>КОРИСТУВАННЯ API REST</title>
        <para>
            У цьому розділі наведено список доступних команд та приклади користування із
використанням програми <citerefentry> <refentrytitle>curl</refentrytitle>
<manvolnum>1</manvolnum> </citerefentry>. Усі запити до засобу надання даних
проксі мають встановлювати для заголовка Content Type значення
<quote>application/json</quote>. Крім того, для локального засобу надання
даних передбачено підтримку встановлення для Content Type значення
<quote>application/octet-stream</quote>. Реєстраційні дані, збережені із
запитами, де встановлено значення заголовка Content Type
<quote>application/octet-stream</quote>, є даними у кодуванні base64 у
сховищі, які розшифровуються під час отримання, тому не можна зберігати
реєстраційні дані із одним значенням Content Type і отримувати з
іншим. Адреса реєстраційних даних має починатися з
<filename>/secrets/</filename>.
        </para>
            <variablelist>
                <varlistentry>
                    <term>Отримання списку реєстраційних даних</term>
                    <listitem>
                    <para>
                        Щоб отримати список доступних реєстраційних даних, надішліть запит HTTP GET
із кінцевою навскісною рискою у шляху до контейнера.
                    </para>
                    <para>
                        Приклад: <programlisting>
curl -H "Content-Type: application/json" \
     --unix-socket /var/run/secrets.socket \
     -XGET http://localhost/secrets/
                        </programlisting>
                    </para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>Отримання реєстраційних даних</term>
                    <listitem>
                    <para>
                        Щоб прочитати значення окремого запису реєстраційних даних, надішліть запит
HTTP GET без кінцевої навскісної риски. Остання частина адреси вважатиметься
назвою запису реєстраційних даних.
                    </para>
                    <para>
                        Приклади: <programlisting>
curl -H "Content-Type: application/json" \
     --unix-socket /var/run/secrets.socket \
     -XGET http://localhost/secrets/foo
                        </programlisting> <programlisting>
curl -H "Content-Type: application/octet-stream" \
     --unix-socket /var/run/secrets.socket \
     -XGET http://localhost/secrets/bar
                        </programlisting>
                    </para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>Встановлення реєстраційних даних</term>
                    <listitem>
                    <para>
                        Щоб встановити запис реєстраційних даних з використанням типу
<quote>application/json</quote>, надішліть запит HTTP PUT із даними JSON,
які включатимуть тип і значення. Тип (type) має бути встановлено у значення
"simple", а значення (value) має містити дані реєстраційного запису. Якщо
запис із вказаною назвою вже існує, відповіддю буде повідомлення про помилку
409 HTTP.
                    </para>
                    <para>
                        Тип <quote>application/json</quote> просто надсилає реєстраційний ключ як
вміст повідомлення.
                    </para>
                    <para>
                        У наведеному нижче прикладі ми встановлюємо для реєстраційних даних із
назвою «foo» значення «foosecret», а для реєстраційних даних із назвою «bar»
— значення «barsecret», використовуючи різні значення Content Type.
<programlisting>
curl -H "Content-Type: application/json" \
     --unix-socket /var/run/secrets.socket \
     -XPUT http://localhost/secrets/foo \
     -d'{"type":"simple","value":"foosecret"}'
                        </programlisting> <programlisting>
curl -H "Content-Type: application/octet-stream" \
     --unix-socket /var/run/secrets.socket \
     -XPUT http://localhost/secrets/bar \
     -d'barsecret'
                        </programlisting>
                    </para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>Створення контейнера</term>
                    <listitem>
                    <para>
                        Контейнери надають додатковий простір назв для реєстраційних даних цього
користувача. Для створення контейнера надішліть запит HTTP POST, чи я адреса
завершуватиметься назвою контейнера. Будь ласка, зауважте, що адреса має
завершуватися символом навскісної риски.
                    </para>
                    <para>
                        У наступному прикладі створюємо контейнер із назвою «mycontainer»:
<programlisting>
curl -H "Content-Type: application/json" \
     --unix-socket /var/run/secrets.socket \
     -XPOST http://localhost/secrets/mycontainer/
                        </programlisting>
                    </para>
                    <para>
                        Щоб працювати із записами реєстраційних даних у цьому контейнері, просто
вкладіть записи реєстраційних даних до шляху контейнера: <programlisting>
http://localhost/secrets/mycontainer/mysecret
                        </programlisting>
                    </para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>Вилучення реєстраційних даних або контейнера</term>
                    <listitem>
                    <para>
                        Щоб вилучити запис реєстраційних даних або контейнер, надішліть запит HTTP
DELETE із шляхом до запису реєстраційних даних або до контейнера.
                    </para>
                    <para>
                        У наведеному нижче прикладі ми вилучимо реєстраційні дані для запису «foo».
<programlisting>
curl -H "Content-Type: application/json" \
     --unix-socket /var/run/secrets.socket \
     -XDELETE http://localhost/secrets/foo
                        </programlisting>
                    </para>
                    </listitem>
                </varlistentry>
            </variablelist>
    </refsect1>
    <refsect1 id='custodia_example'>
        <title>ПРИКЛАД НАЛАШТОВУВАННЯ МОДУЛІВ НАДАННЯ ДАНИХ CUSTODIA І ПРОКСІ</title>
        <para>
            Для тестування засобу надання даних «proxy» вам слід налаштувати
проксі-передавання на сервер Custodia. Будь ласка, завжди користуйтеся
документацією до Custodia, оскільки інструкції налаштовування у різних
версіях Custodia можуть бути різними.
        </para>
        <para>
            Ці налаштування визначають для сервера Custodia адресу очікування даних
http://localhost:8080, дозволяють будь-кому із заголовком із назвою
MYSECRETNAME, який встановлено у значення mysecretkey, обмін даними із
сервером Custodia. Запишіть ці дані до файла (наприклад,
<replaceable>custodia.conf</replaceable>): <programlisting>
[global]
server_version = "Secret/0.0.7"
server_url = http://localhost:8080/
auditlog = /var/log/custodia.log
debug = True

[store:simple]
handler = custodia.store.sqlite.SqliteStore
dburi = /var/lib/custodia.db
table = secrets

[auth:header]
handler = custodia.httpd.authenticators.SimpleHeaderAuth
header = MYSECRETNAME
value = mysecretkey

[authz:paths]
handler = custodia.httpd.authorizers.SimplePathAuthz
paths = /secrets

[/]
handler = custodia.root.Root
store = simple
            </programlisting>
        </para>
        <para>
            Далі, віддайте команду <replaceable>custodia</replaceable>, вказавши файл
налаштувань у параметрі командного рядка.
        </para>
        <para>
            Будь ласка, зверніть увагу на те, що у поточній версії неможливо на
загальному рівні переспрямовувати усі запити до екземпляра Custodia. Замість
цього слід визначати підрозділи для окремих ідентифікаторів користувачів,
які переспрямовуватимуть запити до Custodia. У наведеному нижче прикладі
проілюстровано конфігурацію, за якої запити користувача із UID 123
переспрямовуватимуться до Custodia, а запити усіх інших користувачів
оброблятимуться локальним засобом надання даних.
        </para>
        <programlisting>
[secrets]

[secrets/users/123]
provider = proxy
proxy_url = http://localhost:8080/secrets/
auth_type = header
auth_header_name = MYSECRETNAME
auth_header_value = mysecretkey
        </programlisting>
    </refsect1>
</refentry>
</reference>
